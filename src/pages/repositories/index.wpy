<style lang="less">
.weui-media-box__info__meta {
    margin: 0;
    font-size: 12px;
  }
  .repository-info {
    margin-top: 5px;
  }
  .repository-name {
    white-space: normal;
    font-size: 18px;
  }
  .avatar {
    padding: 4px;
    width: 50px;
    height: 50px;
  }
  .inventory-count {
    background-color: #d8d8d8;
    float: right;
  }

  /*分类*/
  .weui-flex {
    align-items: center;
  }
  .weui-cells {
    margin-top: 0px;
    opacity: 0;
    transition: .3s;
    &_show {
        opacity: 1;
    }
  }
  .weui-cell {
    &:before {
        right: 15px;
    }
  }
  .menu-list__item {
    margin: 10px 0;
    background-color: #FFFFFF;
    border-radius: 2px;
    overflow: hidden;
    &:first-child {
        margin-top: 0px;
    }
  }
  .menu-list__img {
    width: 30px;
    height: 30px;
  }

  .menu-list__item-hd {
    padding: 20px;
    transition: opacity .3s;
    &_show {
        opacity: .4;
    }
  }
  .menu-list__item-bd {
    height: 0;
    overflow: hidden;
    &_show {
        height: auto;
    }
  }
  .create {
    width: 45px;
    height: 45px;
    position: fixed;
    bottom: 30px;
    right: 40px;
    opacity: .8;
  }
  .edit{
    margin-right: 20px;
    float: right;
    width: 20px;
    height: 20px;
  }
  .delete{
    margin-right: 20px;
    float: right;
    width: 20px;
    height: 20px;
  }
  .parter{
    margin-right: 20px;
    float: right;
    width: 20px;
    height: 20px;
  }
</style>
<template>
  <view class="navbar page">
        <view class="page__bd">
            <view class="weui-tab">
                <view class="weui-navbar">
                    <view wx:for="{{tabs}}" wx:key="*this" id="{{index}}" class="weui-navbar__item {{activeIndex == index ? 'weui-bar__item_on' : ''}}" @tap="tabClick">
                        <view class="weui-navbar__title">{{item}}</view>
                    </view>
                    <view class="weui-navbar__slider" style="left: {{sliderLeft}}px; transform: translateX({{sliderOffset}}px); -webkit-transform: translateX({{sliderOffset}}px);"></view>
                </view>
                <view class="weui-tab__panel">
                    <view class="weui-tab__content" hidden="{{activeIndex != 0}}">
                      <view class="page__hd">
                          <view class="weui-flex">
                            <view class="weui-flex__item">
                                <image src="/images/repositories.png" style="width:100px;height:100px;margin-left: 30px;"></image>
                            </view>
                            <view class="weui-flex__item page__title" style="font-size: 25px; text-align: center;padding-top: 20px;">
                                创建的仓库
                            </view>
                          </view>
                      </view>
                      <view class="page__bd">
                          <view class="weui-panel weui-panel_access">
                              <view class="weui-panel__hd">仓库列表</view>
                              <view class="weui-panel__bd">
                                <repeat for="{{ repositories }}" key="id" index="index" item="repository">
                                  <navigator url="/pages/inventories/index?id={{ repository.id }}" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
                                      <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
                                          <image class="weui-media-box__thumb avatar" src="/images/repository.png"/>
                                      </view>
                                      <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                                          <view class="weui-media-box__title repository-name">{{ repository.name }}</view>

                                          <view class="weui-media-box__info repository-info">
                                            <view class="weui-media-box__info__meta">{{ repository.user.name }} • </view>
                                            <view class="weui-media-box__info__meta">{{ repository.updated_at_diff }}</view>
                                          </view>

                                          <view class="weui-badge inventory-count">{{ repository.inventory_count }}</view>
                                          <image src="/images/delete.png" class="delete" catchtap="deleteRepository({{repository.id}})"/>
                                          <image src="/images/edit.png" class="edit" catchtap="editRepository({{repository.id}})"/>
                                          <image src="/images/parter.png" class="parter" catchtap="parterIndex({{repository.id}},{{repository.user_id}})"/>
                                      </view>
                                  </navigator>
                                </repeat>
                                <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
                                  <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
                                </view>
                              </view>
                          </view>
                      </view>
                    </view>
                    <view class="weui-tab__content" hidden="{{activeIndex != 1}}">
                      <view class="page__hd">
                          <view class="weui-flex">
                            <view class="weui-flex__item">
                                <image src="/images/repositories.png" style="width:100px;height:100px;margin-left: 30px;"></image>
                            </view>
                            <view class="weui-flex__item page__title" style="font-size: 25px; text-align: center;padding-top: 20px;">
                                协作的仓库
                            </view>
                          </view>
                      </view>
                      <view class="page__bd">
                          <view class="weui-panel weui-panel_access">
                              <view class="weui-panel__hd">仓库列表</view>
                              <view class="weui-panel__bd">
                                <repeat for="{{ repositories }}" key="id" index="index" item="repository">
                                  <navigator url="/pages/inventories/index?id={{ repository.id }}" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
                                      <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
                                          <image class="weui-media-box__thumb avatar" src="/images/repository.png"/>
                                      </view>
                                      <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
                                          <view class="weui-media-box__title repository-name">{{ repository.name }}</view>

                                          <view class="weui-media-box__info repository-info">
                                            <view class="weui-media-box__info__meta">{{ repository.user.name }} • </view>
                                            <view class="weui-media-box__info__meta">{{ repository.updated_at_diff }}</view>
                                          </view>

                                          <view class="weui-badge inventory-count">{{ repository.inventory_count }}</view>
                                      </view>
                                  </navigator>
                                </repeat>
                                <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
                                  <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
                                </view>
                              </view>
                          </view>
                      </view>
                    </view>
                </view>
            </view>
            <!-- 新建按钮 -->
            <navigator url="/pages/repositories/create">
              <image src="/images/create3.png" class="create"/>
            </navigator>
        </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import util from '@/utils/util'
  // 需要设置slider的宽度，用于计算中间位置
  const sliderWidth = 96

  export default class RepositoriesIndex extends wepy.page {
    config = {
      enablePullDownRefresh: true
    }
    data = {
      // 仓库数据
      repositories: [],
      // 当前分页
      page: 1,
      noMoreData: false,
      url: [
        '/repositories',
        '/parter/repositories'
      ],
      isLoading: false,

      tabs: ['创建的仓库', '协作的仓库'],
      activeIndex: 0,
      sliderOffset: 0,
      sliderLeft: 0,
      user: null
    }
    methods = {
      tabClick (e) {
        this.sliderOffset = e.currentTarget.offsetLeft
        this.activeIndex = parseInt(e.currentTarget.id)
        this.page = 1
        this.$apply()
        this.getRepositories(this.page, true)
      },
      async deleteRepository(repositoryId) {
        let res = await wepy.showModal({
          title: '确认删除',
          content: '您确认删除该仓库么',
          confirmText: '删除',
          cancelText: '取消'
        })

        if (!res.confirm) {
          return
        }

        try {
          let deleteResponse = await api.authRequest({
            url: 'repositories/' + repositoryId,
            method: 'DELETE'
          })

          if (deleteResponse.statusCode === 204) {
            let pages = this.getCurrentPages()
            if (pages.length > 1) {
              // 检查所有已经打开的页面
              let refreshPages = []
              pages.forEach((page) => {
                if (page.route === 'pages/repositories/index') {
                  refreshPages.push(page.route)
                }
              })
              this.$parent.globalData.refreshPages = this.$parent.globalData.refreshPages.concat(refreshPages)
            }
            this.repositories = this.repositories.filter((repository) => repository.id !== repositoryId)
            this.$apply()
            wepy.showToast({
              title: '删除成功',
              icon: 'success',
              duration: 2000
            })
          }

          if (deleteResponse.statusCode === 405) {
            wepy.showToast({
              title: '失败(数据关联)',
              image: '/images/error.png',
              duration: 2000
            })
          }
        } catch (err) {
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      },
      async editRepository(repositoryId) {
        wepy.navigateTo({
          url: '/pages/repositories/edit?repository_id=' + repositoryId
        })
      },
      async parterIndex(repositoryId, userId) {
        wepy.navigateTo({
          url: '/pages/parters/index?repository_id=' + repositoryId + '&user_id=' + userId
        })
      }
    }
    // 获取仓库数据
    async getRepositories(page = 1, reset = false) {
      try {
        // 请求仓库列表接口
        let url = null
        if (this.activeIndex === 0) {
          url = this.url[0]
        }
        if (this.activeIndex === 1) {
          url = this.url[1]
        }
        let repositoriesResponse = await api.authRequest({
          url: 'users/' + this.user.id + url,
          data: {
            page: page,
            include: 'lastUpdater'
          }
        })
        if (repositoriesResponse.statusCode === 200) {
          let repositories = repositoriesResponse.data.data
          repositories.forEach(function (repository) {
            repository.updated_at_diff = util.diffForHumans(repository.updated_at)
          })
          // 将数据合并到 this.repositories
          this.repositories = reset ? repositories : this.repositories.concat(repositories)
          let pagination = repositoriesResponse.data.meta.pagination
          // 根据分页设置是否还有更多数据
          if (pagination.current_page === pagination.total_pages) {
            this.noMoreData = true
          } else {
            this.noMoreData = false
          }
          this.$apply()
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
    async onPullDownRefresh() {
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.page = 1
        this.$apply()
        await this.getRepositories(this.page, true)
        wepy.stopPullDownRefresh()
      }
    }
    async onReachBottom () {
      // 如果没有更多内容，直接返回
      if (this.noMoreData || this.isLoading) {
        return
      }
      this.isLoading = true
      this.page = this.page + 1
      await this.getRepositories(this.page, false)
      this.isLoading = false
      this.$apply()
    }
    async onLoad() {
      let res = await wepy.getSystemInfo()
      this.sliderLeft = (res.windowWidth / this.tabs.length - sliderWidth) / 2
      this.sliderOffset = res.windowWidth / this.tabs.length * this.activeIndex
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.user = await this.$parent.getCurrentUser()
        await this.getRepositories(this.page, true)
        this.$apply()
      }
    }
    async onShow() {
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.user = await this.$parent.getCurrentUser()
        this.$parent.checkRefreshPages(this.getCurrentPages().pop().route, () => {
          this.noMoreData = false
          this.page = 1
          this.$apply()
          this.getRepositories(this.page, true)
        })
        this.$apply()
      }
    }
  }
</script>
