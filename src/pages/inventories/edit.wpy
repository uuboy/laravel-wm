<style lang="less">
  .factory_name{
    text-align: center;
  }
</style>
<template>
    <view class="page">
        <view class="page__hd">
            <view class="weui-flex">
                <view class="weui-flex__item">
                    <image src="/images/repositories.png" style="width:100px;height:100px;margin-left: 30px;"></image>
                </view>
                <view class="weui-flex__item page__title" style="font-size: 30px; text-align: center;padding-top: 20px;">
                    修改清单
                </view>
            </view>
        </view>
        <view class="page__bd">
          <form bindsubmit="submit">
            <view class="weui-cells__title">修改清单</view>
            <view class="weui-cells weui-cells_after-title">
                <view class="weui-cell weui-cell_input">
                  <view class="weui-cell__hd">
                      <view class="weui-label">清单名称</view>
                  </view>
                  <view class="weui-cell__bd">
                      <input class="weui-input" placeholder="请输入清单名称" name="name" value="{{inventory.name}}"/>
                  </view>
                </view>
                <view class="weui-cell weui-cell_access">
                  <view class="weui-cell__hd">往来单位</view>
                  <view class="weui-cell__bd" hover-class="weui-cell_active">

                    <navigator url="/pages/inventories/selectFactory?repository_id={{repository_id}}">
                      <view class="factory_name">{{ selectFactory.name }}</view>
                      <input class="weui-input" name="factory_id" value="{{selectFactory.id}}" hidden="true"/>
                    </navigator>
                  </view>
                  <view class="weui-cell__ft weui-cell__ft_in-access"></view>
                </view>
                <view class="weui-cell weui-cell_select">
                  <view class="weui-cell__hd weui-cell__hd_in-select-after">
                    <view class="weui-label">交易类型</view>
                  </view>
                  <view class="weui-cell__bd">
                    <picker @change="bindSortChange" value="{{sortIndex}}" range="{{sorts}}" name="sort">
                      <view class="weui-select weui-select_in-select-after">
                        {{sorts[sortIndex]}}
                      </view>
                    </picker>
                  </view>
                </view>
                <view class="weui-cell weui-cell_input">
                  <view class="weui-cell__hd">
                    <view class="weui-label">交易日期</view>
                  </view>
                  <view class="weui-cell__bd">
                    <picker mode="date" value="{{date}}" start="1900-01-01" end="2099-12-31" @change="bindDateChange" name="deal_date">
                      <view class="weui-input">{{date}}</view>
                    </picker>
                  </view>
                </view>
            </view>
            <view class="weui-btn-area">
                <button class="weui-btn" type="primary" formType="submit">保存</button>
            </view>
          </form>
        </view>
    </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '@/utils/api'

  export default class InventoriesEdit extends wepy.page {
    config = {
      navigationBarTitleText: '修改仓库'
    }

    data = {
      repository_id: 0,
      inventory_id: 0,
      inventory: null,
      selectFactory: null,
      sorts: ['出库', '入库'],
      sortIndex: 0,
      date: '',
      errors: null
    }

    methods = {
      bindSortChange (e) {
        this.sortIndex = e.detail.value
      },
      bindDateChange (e) {
        this.date = e.detail.value
      }
    }
    async onLoad(options) {
      // 未登录跳转到登录页面
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.repository_id = options.repository_id
        this.inventory_id = options.inventory_id
        await this.getInventory(this.inventory_id)
        this.selectFactory = this.inventory.factory
        this.sortIndex = this.inventory.factory.sort
        this.date = this.inventory.deal_date
        this.$apply()
      }
    }

    async onShow() {
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.selectFactory = this.$parent.globalData.selectFactory
        this.$parent.globalData.selectFactory = null
        this.$apply()
      }
    }

    async getInventory(id) {
      let inventoryResponse = await api.authRequest({
        url: 'repositories/' + this.repository_id + '/inventories/' + this.inventory_id,
        data: {
          include: 'factory'
        }
      })
      if (inventoryResponse.statusCode === 200) {
        this.inventory = inventoryResponse.data
        this.$apply()
      }
    }

    async submit (e) {
      this.errors = null

      let formData = e.detail.value

      if (!formData.name) {
        wepy.showToast({
          title: '请填写清单名称',
          icon: 'none',
          duration: 2000
        })

        return
      }

      try {
        let updateResponse = await api.authRequest({
          url: 'repositories/' + this.repository_id + '/inventories/' + this.inventory_id,
          method: 'PUT',
          data: formData
        })

        if (updateResponse.statusCode === 200) {
          let pages = this.getCurrentPages()
          // 如果有上一页
          if (pages.length > 1) {
            // 检查所有已经打开的页面
            let refreshPages = []
            pages.forEach((page) => {
              if (page.route === 'pages/inventories/index') {
                refreshPages.push(page.route)
              }
            })
            this.$parent.globalData.refreshPages = this.$parent.globalData.refreshPages.concat(refreshPages)
            this.$apply()
          }
          wepy.showToast({
            title: '添加成功',
            icon: 'success'
          })

          setTimeout(function() {
            wepy.navigateBack()
          }, 2000)
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
  }
</script>
