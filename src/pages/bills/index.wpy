<style lang="less">
.create {
    width: 45px;
    height: 45px;
    position: fixed;
    bottom: 30px;
    right: 40px;
    opacity: .8;
}
.bill_delete{
  width: 20px;
  height: 20px;
}
</style>
<template>
<view class="page">
  <view class="page__hd">
    <view class="weui-flex">
      <view class="weui-flex__item">单据列表</view>
    </view>
  </view>
  <view class="page__bd">
    <view class="weui-cells__title">带说明的列表项</view>
    <view class="weui-cells weui-cells_after-title">
      <repeat for="{{bills}}" key="id" index="index" item="bill">
        <view class="weui-cell">
          <view class="weui-cell__hd"></view>
          <view class="weui-cell__bd">{{ bill.good.name }}</view>
          <view class="weui-cell__ft">{{ bill.num }}</view>
          <view class="weui-cell__ft" wx:if="{{ bill.can_delete }}">
            <image src="/images/delete.png" class="bill_delete" @tap="deleteBill({{bill.id}})"/>
          </view>
        </view>
      </repeat>
    </view>
    <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
      <view class="weui-loadmore__tips weui-loadmore__tips_in-line bgF8">没有更多数据</view>
    </view>
    <!-- 清单新建按钮 -->
    <navigator url="/pages/bills/create?repository_id={{repository_id}}&inventory_id={{id}}">
      <image src="/images/create3.png" class="create"/>
    </navigator>
  </view>
</view>
</template>
<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import util from '@/utils/util'

  export default class BillsIndex extends wepy.page {
    config = {
      enablePullDownRefresh: true
    }

    data = {
      bills: [],
      id: 0,
      page: 1,
      isLoading: false,
      noMoreData: false,
      repository_id: 0
    }

    methods = {

    }

    async onPullDownRefresh() {
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.page = 1
        this.$apply()
        await this.getBill(this.id, this.page, true)
        wepy.stopPullDownRefresh()
      }
    }

    async onReachBottom() {
      // 如果没有更多内容，直接返回
      if (this.noMoreData || this.isLoading) {
        return
      }
      this.isLoading = true
      this.page = this.page + 1
      await this.getBill(this.id, this.page, false)
      this.isLoading = false
      this.$apply()
    }

    async onLoad(options) {
      if (!this.$parent.checkLogin()) {
        wepy.navigateTo({
          url: '/pages/auth/login'
        })
      } else {
        this.id = options.inventory_id
        this.repository_id = options.repository_id
        this.$apply()
        await this.getBill(this.id, this.page, true)
      }
    }

    async onShow() {

    }

    async getBill(id, page = 1, reset = false) {
      try {
        let billsResponse = await api.authRequest({
          url: 'repositories/' + this.repository_id + '/inventories/' + id + '/bills',
          data: {
            page: page,
            include: 'good'
          },
          method: 'GET'
        })
        let user = await this.$parent.getCurrentUser()
        if (billsResponse.statusCode === 200) {
          let bills = billsResponse.data.data
          bills.forEach((bill) => {
            bill.can_delete = this.canDelete(user, bill)
            bill.updated_at_diff = util.diffForHumans(bill.updated_at)
          })
          this.bills = reset ? bills : this.bills.concat(bills)
          let pagination = billsResponse.data.meta.pagination
          // 根据分页设置是否还有更多数据
          if (pagination.current_page === pagination.total_pages) {
            this.noMoreData = true
          } else {
            this.noMoreData = false
          }
          this.$apply()
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员1'
        })
      }
    }

    canDelete(user, bill) {
      if (!user) {
        return false
      }
      return (bill.user_id === user.id)
    }
  }
</script>
